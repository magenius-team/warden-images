name: Docker Image PHP-FPM
on:
  schedule:
    - cron: "0 3 * * 0"   # At 03:00 on Sunday
  push:
    branches:
      - 'main'
    paths:
      - version
      - images/php-fpm/**
      - .github/workflows/*general-php-fpm*
      - .github/workflows/php-matrix/**
jobs:
  php-matrix:
    name: Generate Base PHP Matrix
    runs-on: ubuntu-latest
    container:
      image: php:8.4-cli-alpine
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    env:
      RUN_ON_OS: ${{ vars.RUN_ON_OS }}
      PHP_LATEST: ${{ vars.PHP_LATEST }}
      PHP_VERSIONS: ${{ vars.PHP_VERSIONS }}
      NODE_LATEST: ${{ vars.NODE_LATEST }}
      NODE_VERSIONS: ${{ vars.NODE_VERSIONS }}
      NOT_STABLE_XDEBUG_PHP_VERSIONS: ${{ vars.NOT_STABLE_XDEBUG_PHP_VERSIONS }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        run: |
          php .github/workflows/php-matrix/php-generator.php >> $GITHUB_OUTPUT
      - run: echo "Matrix:\n";echo '${{ steps.matrix.outputs.matrix }}'

  node-matrix:
    name: Generate Base PHP-Node Matrix
    runs-on: ubuntu-latest
    container:
      image: php:8.4-cli-alpine
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    env:
      RUN_ON_OS: ${{ vars.RUN_ON_OS }}
      PHP_LATEST: ${{ vars.PHP_LATEST }}
      PHP_VERSIONS: ${{ vars.PHP_VERSIONS }}
      NODE_LATEST: ${{ vars.NODE_LATEST }}
      NODE_VERSIONS: ${{ vars.NODE_VERSIONS }}
      NOT_STABLE_XDEBUG_PHP_VERSIONS: ${{ vars.NOT_STABLE_XDEBUG_PHP_VERSIONS }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        run: |
          php .github/workflows/php-matrix/node-generator.php >> $GITHUB_OUTPUT
      - run: echo "Matrix:\n";echo '${{ steps.matrix.outputs.matrix }}'

  full-matrix:
    name: Generate Full Matrix
    runs-on: ubuntu-latest
    container:
      image: php:8.4-cli-alpine
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    env:
      RUN_ON_OS: ${{ vars.RUN_ON_OS }}
      PHP_LATEST: ${{ vars.PHP_LATEST }}
      PHP_VERSIONS: ${{ vars.PHP_VERSIONS }}
      NODE_LATEST: ${{ vars.NODE_LATEST }}
      NODE_VERSIONS: ${{ vars.NODE_VERSIONS }}
      NOT_STABLE_XDEBUG_PHP_VERSIONS: ${{ vars.NOT_STABLE_XDEBUG_PHP_VERSIONS }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        run: |
          php .github/workflows/php-matrix/full-generator.php >> $GITHUB_OUTPUT
      - run: echo "Matrix:\n";echo '${{ steps.matrix.outputs.matrix }}'

  php-fpm:
    needs: php-matrix
    name: PHP-FPM ${{ matrix.php_version }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.php-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        with:
          file: images/php-fpm/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            ENV_SOURCE_IMAGE=php
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-buildcache,mode=max

  php-node:
    name: PHP-FPM ${{ matrix.php_version }} + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-fpm, node-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 6 || 0 }}
      matrix: ${{ fromJson(needs.node-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        with:
          file: images/php-fpm/node/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
            NODE_VERSION=${{ matrix.node_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}

  xdebug3:
    name: PHP-FPM ${{ matrix.php_version }} + XDebug 3
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-xdebug3

  xdebug3-node:
    name: PHP-FPM ${{ matrix.php_version }} + XDebug 3 + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-xdebug3

  spx:
    name: PHP-FPM ${{ matrix.php_version }} + SPX
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-spx

  spx-node:
    name: PHP-FPM ${{ matrix.php_version }} + SPX + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-spx

  blackfire:
    name: PHP-FPM ${{ matrix.php_version }} + Blackfire
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-blackfire

  blackfire-node:
    name: PHP-FPM ${{ matrix.php_version }} + Blackfire + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-blackfire

  magento1:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/magento1/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento1

  magento1-node:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/magento1/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1

  magento1-xdebug3:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + XDebug 3
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento1
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento1-xdebug3

  magento1-xdebug3-node:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + XDebug 3 + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1-xdebug3

  magento1-spx:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + SPX
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento1
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento1-spx

  magento1-spx-node:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + SPX + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1-spx

  magento1-blackfire:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + Blackfire
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento1
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento1-blackfire

  magento1-blackfire-node:
    name: Magento 1 PHP-FPM ${{ matrix.php_version }} + Blackfire + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento1, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento1-blackfire

  magento2:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/magento2/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento2

  magento2-node:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ php-node, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/magento2/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2

  magento2-xdebug3:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + XDebug 3
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento2
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento2-xdebug3

  magento2-xdebug3-node:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + XDebug 3 + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/xdebug3/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2
            XDEBUG_TYPE=${{ matrix.xdebug_type }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2-xdebug3

  magento2-spx:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + SPX
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento2
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento2-spx

  magento2-spx-node:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + SPX + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/spx/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2-spx

  magento2-blackfire:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + Blackfire
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version == 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-magento2
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-magento2-blackfire

  magento2-blackfire-node:
    name: Magento 2 PHP-FPM ${{ matrix.php_version }} + Blackfire + Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    needs: [ magento2, full-matrix ]
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: ${{ github.ref == 'refs/heads/main' && 2 || 0 }}
      matrix: ${{ fromJson(needs.full-matrix.outputs.include) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - uses: docker/build-push-action@v6
        if: ${{ matrix.node_version != 'x' }}
        with:
          file: images/php-fpm/blackfire/Dockerfile
          context: images/php-fpm/context
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENV_SOURCE_IMAGE=ghcr.io/${{ github.repository_owner }}/php-fpm
            PHP_VERSION=${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/php-fpm:${{ matrix.php_version }}-node${{ matrix.node_version }}-magento2-blackfire
